<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Anori.Common</name>
    </assembly>
    <members>
        <member name="T:Anori.Common.ActivatableObservableCollection">
            <summary>
            Activatable Observable Collection.
            </summary>
            <seealso cref="T:Anori.Common.ActivatableObservableCollection`1" />
        </member>
        <member name="T:Anori.Common.ActivatableObservableCollection`1">
            <summary>
            Activatable Observable Collection.
            </summary>
            <typeparam name="T">Activatable Type.</typeparam>
            <seealso cref="T:System.Collections.ObjectModel.ObservableCollection`1" />
        </member>
        <member name="F:Anori.Common.ActivatableObservableCollection`1.isActivated">
            <summary>
                The is activated.
            </summary>
        </member>
        <member name="M:Anori.Common.ActivatableObservableCollection`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Anori.Common.ActivatableObservableCollection`1" /> class.
            </summary>
        </member>
        <member name="M:Anori.Common.ActivatableObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Anori.Common.ActivatableObservableCollection`1" /> class.
            </summary>
            <param name="collection">The collection from which the tree are copied.</param>
        </member>
        <member name="P:Anori.Common.ActivatableObservableCollection`1.IsActivated">
            <summary>
                Gets a value indicating whether this instance is activated.
            </summary>
            <value>
                <c>true</c> if this instance is activated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Anori.Common.ActivatableObservableCollection`1.Activate">
            <summary>
                Activates this instance.
            </summary>
        </member>
        <member name="M:Anori.Common.ActivatableObservableCollection`1.Deactivate">
            <summary>
                Deactivates this instance.
            </summary>
        </member>
        <member name="M:Anori.Common.ActivatableObservableCollection`1.ClearItems">
            <summary>
                Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Anori.Common.ActivatableObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:Anori.Common.ActivatableObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
                Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Anori.Common.ActivatableObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index.</param>
        </member>
        <member name="T:Anori.Common.EventArgs`1">
            <summary>
            Generic Event Args.
            </summary>
            <typeparam name="T">Payload Type.</typeparam>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:Anori.Common.EventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Anori.Common.EventArgs`1"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Anori.Common.EventArgs`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Anori.Common.IActivatable">
            <summary>
                Activatable Interface.
            </summary>
        </member>
        <member name="M:Anori.Common.IActivatable.Activate">
            <summary>
                Activates this instance.
            </summary>
        </member>
        <member name="M:Anori.Common.IActivatable.Deactivate">
            <summary>
                Deactivates this instance.
            </summary>
        </member>
        <member name="T:Anori.Common.IActivatable`1">
            <summary>
                Activatable Interface.
            </summary>
            <typeparam name="TSelf">The type of the self.</typeparam>
            <seealso cref="T:Anori.Common.IActivated" />
        </member>
        <member name="M:Anori.Common.IActivatable`1.Activate">
            <summary>
                Activates this instance.
            </summary>
            <returns>The Self.</returns>
        </member>
        <member name="M:Anori.Common.IActivatable`1.Deactivate">
            <summary>
                Deactivates this instance.
            </summary>
            <returns>The Self.</returns>
        </member>
        <member name="T:Anori.Common.IActivated">
            <summary>
                Activated Interface.
            </summary>
        </member>
        <member name="E:Anori.Common.IActivated.IsActiveChanged">
            <summary>
                Occurs when [is active changed].
            </summary>
        </member>
        <member name="P:Anori.Common.IActivated.IsActive">
            <summary>
                Gets a value indicating whether the object is active.
            </summary>
            <value><see langword="true" /> if the object is active; otherwise <see langword="false" />.</value>
        </member>
        <member name="T:Anori.Common.ResetLazy`1">
            <summary>
                ResetLazy.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Anori.Common.ResetLazy`1.box">
            <summary>
                The box.
            </summary>
        </member>
        <member name="F:Anori.Common.ResetLazy`1.mode">
            <summary>
                The mode.
            </summary>
        </member>
        <member name="F:Anori.Common.ResetLazy`1.syncLock">
            <summary>
                The synchronize lock.
            </summary>
        </member>
        <member name="F:Anori.Common.ResetLazy`1.valueFactory">
            <summary>
                The value factory.
            </summary>
        </member>
        <member name="M:Anori.Common.ResetLazy`1.#ctor(System.Func{`0},Anori.Common.LazyThreadSafetyMode,System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Anori.Common.ResetLazy`1" /> class.
            </summary>
            <param name="valueFactory">The value factory.</param>
            <param name="mode">The mode.</param>
            <param name="declaringType">Type of the declaring.</param>
            <exception cref="T:System.ArgumentNullException">valueFactory</exception>
        </member>
        <member name="P:Anori.Common.ResetLazy`1.Value">
            <summary>
                Gets the boxed value.
            </summary>
            <value>
                The value.
            </value>
        </member>
        <member name="P:Anori.Common.ResetLazy`1.IsValueCreated">
            <summary>
                Gets a value indicating whether this instance is value created.
            </summary>
            <value>
                <c>true</c> if this instance is value created; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Anori.Common.ResetLazy`1.DeclaringType">
            <summary>
                Gets the type of the declaring.
            </summary>
            <value>
                The type of the declaring.
            </value>
        </member>
        <member name="T:Anori.Common.ResetLazy`1.Box">
            <summary>
                The Box.
            </summary>
        </member>
        <member name="F:Anori.Common.ResetLazy`1.Box.Value">
            <summary>
                The value.
            </summary>
        </member>
        <member name="M:Anori.Common.ResetLazy`1.Box.#ctor(`0)">
            <summary>
                Initializes a new instance of the <see cref="T:Anori.Common.ResetLazy`1.Box" /> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Anori.Common.ResetLazy`1.Load">
            <summary>
                Loads this instance.
            </summary>
        </member>
        <member name="M:Anori.Common.ResetLazy`1.Reset">
            <summary>
                Resets this instance.
            </summary>
        </member>
    </members>
</doc>
